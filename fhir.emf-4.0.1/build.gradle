plugins {
	id 'application'
	id 'java'
	id 'java-library'
	id 'eclipse'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:none"
}

group 'org.hl7.fhir'

version = '4.0.1'

description = 'Codebase generated from the HL7/FHIR specification'

def mainClassName = 'fhir.emf'

def jarFile = buildDir.name + "/libs/" + mainClassName + "-" + version + ".jar"

repositories {
	mavenLocal()
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {

	// EMF
	implementation 'org.eclipse.emf:org.eclipse.emf.common:2.40.0'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore:2.38.0'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.38.0'
    implementation 'org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.40.0'
	
   	// Logging
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0' // Now correct for Log4j 2.19.0+
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	configurations.all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
}
		
task generateEMFCode(type: JavaExec) {
    group = 'build'
    description = 'Generates EMF code from XSD files'

    mainClass = 'org.eclipse.emf.codegen.ecore.Generator'
    
    // Use only the necessary classpath, avoiding runtimeClasspath
    classpath = configurations.compileClasspath

    args = [
        '-import', "$projectDir",
        '-xsd',
        '-output', "$projectDir/gen/main/java",
        '-model', "$projectDir/model/",
        '-autoBuild', 'false'
    ]
}


// tasks.compileJava {
//     dependsOn generateEMFCode
// }

test {
    systemProperties 'property': 'value'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'gen/main/java'
         }
    }
    test {
        java {
            srcDirs 'src/test/java'
         }
    }
}

processResources {
  from ('gen/main/java') {
     include '**/*.ecore'
  }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId group
            artifactId mainClassName
            version version
            from(components.java)
        }
    }
}